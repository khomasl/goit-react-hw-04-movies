{"version":3,"sources":["pages/HomePage.js","components/notify.js","services/themoviedb-api.js","components/MoviesList/MoviesList.js"],"names":["HomePage","useState","movies","setMovies","location","useLocation","useEffect","movieShelfAPI","then","label","notifyError","txt","error","text","delay","modules","Map","defaultModules","PNotifyMobile","swipeDismiss","defaults","styling","icons","sticker","animateSpeed","shadow","BASE_URL","API_KEY","END_POINTS","GET_TRENDING","SEARCH_MOVIES","GET_MOVIE_DETAILS","fetchWithErrorHandling","a","url","config","axios","get","result","data","message","fetchMovies","results","fetchMoviesByQuery","query","fetchMovieById","movieId","fetchMovieByActors","fetchMovieByReviews","MoviesList","map","movie","to","pathname","id","state","from","title"],"mappings":"0OAKe,SAASA,IACtB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cAMjB,OAJAC,qBAAU,WACRC,MAA4BC,KAAKL,KAChC,IAGD,qCACE,gDAECD,GACC,cAAC,IAAD,CACEA,OAAQA,EACRE,SAAUA,EACVK,MAAM,yB,wHCcT,SAASC,EAAYC,GAC1BC,gBAAM,CACJC,KAAMF,EACNG,MAAO,IACPC,QAAS,IAAIC,IAAJ,sBACJC,kBADI,CAEP,CACEC,EACA,CACEC,cAAc,SA9BxBC,WAASC,QAAU,UACnBD,WAASE,MAAQ,UACjBF,WAASN,MAAQ,IACjBM,WAASG,SAAU,EACnBH,WAASI,aAAe,OACxBJ,WAASK,QAAS,G,gQChBZC,EAAW,gCACXC,EAAU,mCAEVC,EAAa,CACjBC,aAAa,GAAD,OAAKH,EAAL,sBACZI,cAAc,GAAD,OAAKJ,EAAL,gBACbK,kBAAkB,GAAD,OAAKL,EAAL,U,SAKJM,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,kBAEyBC,IAAMC,IAAIH,EAAKC,GAFxC,cAEUG,EAFV,gBAIiBA,EAAOC,KAJxB,mGAMW7B,YAAY,KAAI8B,UAN3B,0D,wBAaO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBJ,EAAWC,aADa,oBACWF,IACtCnB,MAAK,SAAC+B,GAAD,OAAUA,EAAKG,WAGjB,SAASC,EAAmBC,GACjC,OAAOZ,EAAuB,GAAD,OACxBJ,EAAWE,cADa,oBACYH,EADZ,kBAC6BiB,IACxDpC,MAAK,SAAC+B,GAAD,OAAUA,EAAKG,WAGjB,SAASG,EAAeC,GAC7B,OAAOd,EAAuB,GAAD,OACxBJ,EAAWG,kBADa,YACQe,EADR,oBAC2BnB,IAInD,SAASoB,EAAmBD,GACjC,OAAOd,EAAuB,GAAD,OACxBJ,EAAWG,kBADa,YACQe,EADR,4BACmCnB,IAI3D,SAASqB,EAAoBF,GAClC,OAAOd,EAAuB,GAAD,OACxBJ,EAAWG,kBADa,YACQe,EADR,4BACmCnB,M,gCCrDlE,oDAEe,SAASsB,EAAT,GAAkD,IAA5B/C,EAA2B,EAA3BA,OAAQE,EAAmB,EAAnBA,SAAUK,EAAS,EAATA,MACrD,OACE,6BACGP,EAAOgD,KAAI,SAACC,GAAD,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CACLC,KAAM,CAAEpD,WAAUK,WAJxB,SAQG0C,EAAMM,SATFN,EAAMG","file":"static/js/Home Page.63a2facf.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport * as movieShelfAPI from '../services/themoviedb-api'\r\nimport MoviesList from '../components/MoviesList/MoviesList'\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState(null)\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    movieShelfAPI.fetchMovies().then(setMovies)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1>Trending today</h1>\r\n\r\n      {movies && (\r\n        <MoviesList\r\n          movies={movies}\r\n          location={location}\r\n          label=\"Go back to Home\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import {\r\n  alert,\r\n  error,\r\n  info,\r\n  defaultModules,\r\n  success,\r\n  defaults,\r\n} from '../../node_modules/@pnotify/core/dist/PNotify.js'\r\nimport '@pnotify/core/dist/PNotify.css'\r\nimport '@pnotify/core/Angeler.css'\r\nimport '@pnotify/core/Material.css'\r\nimport '@pnotify/mobile/dist/PNotifyMobile.css'\r\nimport * as PNotifyMobile from '@pnotify/mobile'\r\n\r\ndefaults.styling = 'angeler'\r\ndefaults.icons = 'angeler'\r\ndefaults.delay = 800\r\ndefaults.sticker = false\r\ndefaults.animateSpeed = 'slow'\r\ndefaults.shadow = false\r\n\r\nexport function notifyAlert(txt) {\r\n  alert({\r\n    text: txt,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifyError(txt) {\r\n  error({\r\n    text: txt,\r\n    delay: 4000,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifyInfo(txt) {\r\n  info({\r\n    text: txt,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\nexport function notifySuccess(txt) {\r\n  success({\r\n    text: txt,\r\n    delay: 1200,\r\n    modules: new Map([\r\n      ...defaultModules,\r\n      [\r\n        PNotifyMobile,\r\n        {\r\n          swipeDismiss: true,\r\n        },\r\n      ],\r\n    ]),\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { notifyError } from '../components/notify'\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/'\r\nconst API_KEY = 'de7bae5f5f0124b91214e980e542706d'\r\n\r\nconst END_POINTS = {\r\n  GET_TRENDING: `${BASE_URL}trending/movie/day`, // список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n  SEARCH_MOVIES: `${BASE_URL}search/movie`, // поиск кинофильма по ключевому слову на странице фильмов.\r\n  GET_MOVIE_DETAILS: `${BASE_URL}movie`, // запрос полной информации о фильме для страницы кинофильма.',\r\n  //   GET_MOVIE_CREDITS: `${BASE_URL}movies/get-movie-credits`, //запрос информации о актёрском составе для страницы кинофильма.',\r\n  //   GET_MOVIE_REVIEWS: `${BASE_URL}movies/get-movie-reviews`, //запрос обзоров для страницы кинофильма.',\r\n}\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  try {\r\n    const result = await axios.get(url, config)\r\n    // console.log('result.data :>> ', await result.data)\r\n    return await result.data\r\n  } catch (err) {\r\n    return notifyError(err.message)\r\n  }\r\n  //   return response.ok\r\n  //     ? await response.json()\r\n  //     : Promise.reject(new Error('Not found'))\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${END_POINTS.GET_TRENDING}?api_key=${API_KEY}`,\r\n  ).then((data) => data.results)\r\n}\r\n\r\nexport function fetchMoviesByQuery(query) {\r\n  return fetchWithErrorHandling(\r\n    `${END_POINTS.SEARCH_MOVIES}?api_key=${API_KEY}&query=${query}`,\r\n  ).then((data) => data.results)\r\n}\r\n\r\nexport function fetchMovieById(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${END_POINTS.GET_MOVIE_DETAILS}/${movieId}?api_key=${API_KEY}`,\r\n  )\r\n}\r\n\r\nexport function fetchMovieByActors(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${END_POINTS.GET_MOVIE_DETAILS}/${movieId}/credits?api_key=${API_KEY}`,\r\n  )\r\n}\r\n\r\nexport function fetchMovieByReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${END_POINTS.GET_MOVIE_DETAILS}/${movieId}/reviews?api_key=${API_KEY}`,\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport default function MoviesList({ movies, location, label }) {\r\n  return (\r\n    <ul>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${movie.id}`,\r\n              state: {\r\n                from: { location, label },\r\n              },\r\n            }}\r\n          >\r\n            {movie.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n"],"sourceRoot":""}